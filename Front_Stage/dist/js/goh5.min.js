webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dpi = __webpack_require__(1);


	var Swiper = __webpack_require__(2);

	var load = __webpack_require__(3);

	var GoH5 = __webpack_require__(4);


/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';
	var clientW = document.body.clientWidth;
	var percent = clientW / 320;
	document.getElementById('GoH5ViewPort').setAttribute('content','width=320, initial-scale='+ percent +', maximum-scale='+ percent +', user-scalable=no');

/***/ },
/* 2 */,
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var GoH5 = __webpack_require__(4);
	var utils = __webpack_require__(5);
	var Event = __webpack_require__(6);

	var loadImg = function(src, callback) {
	    var Tag = document.createElement('img');
	    Tag.style.display = 'none';
	    Tag.src = src;
	    document.body.appendChild(Tag);
	    Tag.onload = Tag.onerror = function() {
	        document.body.removeChild(Tag);
	        if (callback) {
	            callback && callback();
	        }
	    };
	}

	var loadedImgLen = 0;
	utils.$('[data-src]').each(function(index, item) {
	    loadImg(utils.$(item).attr('data-src'), function() {
	        loadedImgLen++;
	        Event.trigger('loading', (loadedImgLen / utils.$('[data-src]').length * 100).toFixed(0) + '%');
	        utils.$('.loading_con em').html((loadedImgLen / utils.$('[data-src]').length * 100).toFixed(0) + '%');
	        utils.$(item).attr('src', utils.$(item).attr('data-src'));
	        if (loadedImgLen === utils.$('[data-src]').length) {
	            Event.trigger('loaded');
	            utils.$('.loading_con').addClass('fedeOut');
	            setTimeout(function() {
	                utils.$('.loading_con').css('display', 'none');
	            }, 400);
	        }
	    });
	})


	Event.on('loading', function(val) {
	    console.log(val);
	})

	Event.on('loaded', function() {
	    console.log('loaded');
	})

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';


	var GoH5 = new Swiper('.swiper-container', {
	    lazyLoading: true,
	    lazyLoadingInPrevNext: true,
	    direction: 'vertical',
	    loop: true
	});

	module.exports = GoH5;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Swiper = __webpack_require__(2);
	// 实例化另一个 Swiper 当作工具函数来用(dom操作：utils.$(..)..)
	var utils = new Swiper();
	utils.setCookie = function(name, value, minute) {
	    var date = new Date();
	    if (minute === undefined) {
	        minute = 2;
	    }
	    date.setTime(date.getTime() + (minute * 60 * 1000));
	    var expires = "expires=" + date.toUTCString();
	    document.cookie = name + "=" + value + "; " + expires;
	};

	utils.getCookie = function(name) {
	    var cookies = {};
	    var cookiesArr = document.cookie.split(';');
	    for (var i = 0; i < cookiesArr.length; i++) {
	        var _arr = cookiesArr[i].split('=');
	        cookies[_arr[0]] = _arr[1];
	    }
	    return cookies[name];
	};

	utils.delCookie = function(name) {
	    this.setCookie(name, "", -1);
	};

	utils.styleJson = function(styleString) {
	    var result = {};
	    var _arr = styleString.split(';');
	    for (var i = 0; i < _arr.length; i++) {
	        if (_arr[i] !== '') {
	            var _current = _arr[i].split(':');
	            result[_current[0]] = _current[1];
	        }
	    }
	    return result;
	};

	utils.viewData = function() {
	    var w = win,
	        body = doc.body,
	        dd = doc.documentElement,
	        W = w.innerWidth || dd.clientWidth || body.clientWidth || 0,
	        H = w.innerHeight || dd.clientHeight || body.clientHeight || 0;
	    return {
	        "scrollTop": body.scrollTop || dd.scrollTop || w.pageYOffset,
	        "scrollLeft": body.scrollLeft || dd.scrollLeft || w.pageXOffset,
	        "documentWidth": Math.max(body.scrollWidth, dd.scrollWidth || 0),
	        "documentHeight": Math.max(body.scrollHeight, dd.scrollHeight || 0, H),
	        "viewWidth": W,
	        "viewHeight": H
	    };
	};

	module.exports = utils;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 ************************************************
	 * @author:luoye https://github.com/luoye-fe
	 * @desc:event on/trigger/one/off
	 * @time:2015.01.16
	 ************************************************
	 */
	(function(global, factory) {
	     true ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Event = factory();
	})(this, function() {
	    var e = {};
	    var _each = function(arr, fn) {
	        var ret;
	        for (var i = 0; i < arr.length; i++) {
	            var n = arr[i];
	            ret = fn.call(n, i, n)
	        }
	        return ret;
	    }

	    e.cache = {};
	    e.offlineCache = [];
	    e.isOne = false;
	    e.on = function(key, fn) {
	        var _this = this;
	        if (this.cache[key] === undefined) {
	            this.cache[key] = [];
	            this.cache[key].push(fn);
	        } else {
	            this.cache[key].push(fn);
	        }
	        var _current = [];
	        _each(this.offlineCache, function(index, item) {
	            if (item[key] !== undefined) {
	                var _obj = {};
	                _obj[key] = item[key];
	                _current.push(_obj);
	            }
	        })
	        if (_current.length > 0) {
	            if (_this.isOne) {
	                e.trigger(key, _current[_current.length - 1][key]);
	            } else {
	                _each(_current, function(index, item) {
	                    e.trigger(key, item[key]);
	                })
	            }
	        }
	    }
	    e.one = function(key, fn) {
	        this.isOne = true;
	        this.on(key, fn);
	        this.isOne = false;
	    }
	    e.off = function(key, fn) {
	        if (this.cache[key]) {
	            if (fn) {
	                fn && fn();
	                this.cache[key] = [];
	            } else {
	                this.cache[key] = [];
	            }
	        }
	        this.offlineCache = [];
	    }
	    e.trigger = function(key, value) {
	        var _this = this;
	        var stack = this.cache[key];
	        if (!stack || !stack.length) {
	            var _current = {};
	            _current[key] = value;
	            this.offlineCache.push(_current);
	            return;
	        } else {
	            if (this.isOne) {
	                stack[0].call(_this, value);
	                this.cache[key] = [];
	            } else {
	                return _each(stack, function() {
	                    return this.call(_this, value);
	                })
	            }
	        }
	    }
	    return e;
	})


/***/ }
]);